library IEEE;
use IEEE.std_logic_1164.all;
USE ieee.std_logic_signed.all;
USE IEEE.numeric_std.ALL;

LIBRARY work;
USE work.ALL;
USE work.Components.ALL;

entity muxB_128to1 is
	generic
			(
				DATA_WIDTH : natural := 31;
				N          : natural := 128
			);
	port
		(
			signal xi_1  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_2  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_3  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_4  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_5  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_6  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_7  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_8  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_9  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_10  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_11  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_12  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_13  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_14  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_15  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_16  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_17  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_18  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_19  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_20  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_21  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_22  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_23  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_24  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_25  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_26  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_27  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_28  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_29  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_30  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_31  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_32  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_33  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_34  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_35  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_36  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_37  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_38  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_39  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_40  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_41  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_42  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_43  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_44  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_45  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_46  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_47  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_48  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_49  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_50  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_51  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_52  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_53  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_54  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_55  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_56  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_57  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_58  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_59  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_60  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_61  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_62  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_63  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_64  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_65  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_66  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_67  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_68  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_69  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_70  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_71  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_72  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_73  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_74  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_75  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_76  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_77  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_78  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_79  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_80  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_81  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_82  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_83  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_84  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_85  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_86  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_87  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_88  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_89  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_90  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_91  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_92  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_93  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_94  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_95  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_96  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_97  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_98  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_99  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_100  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_101  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_102  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_103  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_104  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_105  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_106  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_107  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_108  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_109  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_110  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_111  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_112  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_113  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_114  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_115  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_116  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_117  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_118  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_119  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_120  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_121  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_122  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_123  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_124  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_125  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_126  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_127  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal xi_128  : in std_logic_vector((DATA_WIDTH-1) downto 0);
			signal sel 	: in std_logic_vector((bits(N - 1) - 1) downto 0);

			signal yo   : out std_logic_vector((DATA_WIDTH-1) downto 0)
		);
end muxB_128to1;

architecture rtl of muxB_128to1 is
begin
	process(xi_1,xi_2,xi_3,xi_4,xi_5,xi_6,xi_7,xi_8,xi_9,xi_10,xi_11,xi_12,xi_13,xi_14,xi_15,xi_16,xi_17,xi_18,xi_19,xi_20,xi_21,xi_22,xi_23,xi_24,xi_25,xi_26,xi_27,xi_28,xi_29,xi_30,xi_31,xi_32,xi_33,xi_34,xi_35,xi_36,xi_37,xi_38,xi_39,xi_40,xi_41,xi_42,xi_43,xi_44,xi_45,xi_46,xi_47,xi_48,xi_49,xi_50,xi_51,xi_52,xi_53,xi_54,xi_55,xi_56,xi_57,xi_58,xi_59,xi_60,xi_61,xi_62,xi_63,xi_64,xi_65,xi_66,xi_67,xi_68,xi_69,xi_70,xi_71,xi_72,xi_73,xi_74,xi_75,xi_76,xi_77,xi_78,xi_79,xi_80,xi_81,xi_82,xi_83,xi_84,xi_85,xi_86,xi_87,xi_88,xi_89,xi_90,xi_91,xi_92,xi_93,xi_94,xi_95,xi_96,xi_97,xi_98,xi_99,xi_100,xi_101,xi_102,xi_103,xi_104,xi_105,xi_106,xi_107,xi_108,xi_109,xi_110,xi_111,xi_112,xi_113,xi_114,xi_115,xi_116,xi_117,xi_118,xi_119,xi_120,xi_121,xi_122,xi_123,xi_124,xi_125,xi_126,xi_127,xi_128, sel)
	begin
		case to_integer(unsigned(sel)) is
            when 0 =>  yo <= xi_1;
            when 1 =>  yo <= xi_2;
            when 2 =>  yo <= xi_3;
            when 3 =>  yo <= xi_4;
            when 4 =>  yo <= xi_5;
            when 5 =>  yo <= xi_6;
            when 6 =>  yo <= xi_7;
            when 7 =>  yo <= xi_8;
            when 8 =>  yo <= xi_9;
            when 9 =>  yo <= xi_10;
            when 10 =>  yo <= xi_11;
            when 11 =>  yo <= xi_12;
            when 12 =>  yo <= xi_13;
            when 13 =>  yo <= xi_14;
            when 14 =>  yo <= xi_15;
            when 15 =>  yo <= xi_16;
            when 16 =>  yo <= xi_17;
            when 17 =>  yo <= xi_18;
            when 18 =>  yo <= xi_19;
            when 19 =>  yo <= xi_20;
            when 20 =>  yo <= xi_21;
            when 21 =>  yo <= xi_22;
            when 22 =>  yo <= xi_23;
            when 23 =>  yo <= xi_24;
            when 24 =>  yo <= xi_25;
            when 25 =>  yo <= xi_26;
            when 26 =>  yo <= xi_27;
            when 27 =>  yo <= xi_28;
            when 28 =>  yo <= xi_29;
            when 29 =>  yo <= xi_30;
            when 30 =>  yo <= xi_31;
            when 31 =>  yo <= xi_32;
            when 32 =>  yo <= xi_33;
            when 33 =>  yo <= xi_34;
            when 34 =>  yo <= xi_35;
            when 35 =>  yo <= xi_36;
            when 36 =>  yo <= xi_37;
            when 37 =>  yo <= xi_38;
            when 38 =>  yo <= xi_39;
            when 39 =>  yo <= xi_40;
            when 40 =>  yo <= xi_41;
            when 41 =>  yo <= xi_42;
            when 42 =>  yo <= xi_43;
            when 43 =>  yo <= xi_44;
            when 44 =>  yo <= xi_45;
            when 45 =>  yo <= xi_46;
            when 46 =>  yo <= xi_47;
            when 47 =>  yo <= xi_48;
            when 48 =>  yo <= xi_49;
            when 49 =>  yo <= xi_50;
            when 50 =>  yo <= xi_51;
            when 51 =>  yo <= xi_52;
            when 52 =>  yo <= xi_53;
            when 53 =>  yo <= xi_54;
            when 54 =>  yo <= xi_55;
            when 55 =>  yo <= xi_56;
            when 56 =>  yo <= xi_57;
            when 57 =>  yo <= xi_58;
            when 58 =>  yo <= xi_59;
            when 59 =>  yo <= xi_60;
            when 60 =>  yo <= xi_61;
            when 61 =>  yo <= xi_62;
            when 62 =>  yo <= xi_63;
            when 63 =>  yo <= xi_64;
            when 64 =>  yo <= xi_65;
            when 65 =>  yo <= xi_66;
            when 66 =>  yo <= xi_67;
            when 67 =>  yo <= xi_68;
            when 68 =>  yo <= xi_69;
            when 69 =>  yo <= xi_70;
            when 70 =>  yo <= xi_71;
            when 71 =>  yo <= xi_72;
            when 72 =>  yo <= xi_73;
            when 73 =>  yo <= xi_74;
            when 74 =>  yo <= xi_75;
            when 75 =>  yo <= xi_76;
            when 76 =>  yo <= xi_77;
            when 77 =>  yo <= xi_78;
            when 78 =>  yo <= xi_79;
            when 79 =>  yo <= xi_80;
            when 80 =>  yo <= xi_81;
            when 81 =>  yo <= xi_82;
            when 82 =>  yo <= xi_83;
            when 83 =>  yo <= xi_84;
            when 84 =>  yo <= xi_85;
            when 85 =>  yo <= xi_86;
            when 86 =>  yo <= xi_87;
            when 87 =>  yo <= xi_88;
            when 88 =>  yo <= xi_89;
            when 89 =>  yo <= xi_90;
            when 90 =>  yo <= xi_91;
            when 91 =>  yo <= xi_92;
            when 92 =>  yo <= xi_93;
            when 93 =>  yo <= xi_94;
            when 94 =>  yo <= xi_95;
            when 95 =>  yo <= xi_96;
            when 96 =>  yo <= xi_97;
            when 97 =>  yo <= xi_98;
            when 98 =>  yo <= xi_99;
            when 99 =>  yo <= xi_100;
            when 100 =>  yo <= xi_101;
            when 101 =>  yo <= xi_102;
            when 102 =>  yo <= xi_103;
            when 103 =>  yo <= xi_104;
            when 104 =>  yo <= xi_105;
            when 105 =>  yo <= xi_106;
            when 106 =>  yo <= xi_107;
            when 107 =>  yo <= xi_108;
            when 108 =>  yo <= xi_109;
            when 109 =>  yo <= xi_110;
            when 110 =>  yo <= xi_111;
            when 111 =>  yo <= xi_112;
            when 112 =>  yo <= xi_113;
            when 113 =>  yo <= xi_114;
            when 114 =>  yo <= xi_115;
            when 115 =>  yo <= xi_116;
            when 116 =>  yo <= xi_117;
            when 117 =>  yo <= xi_118;
            when 118 =>  yo <= xi_119;
            when 119 =>  yo <= xi_120;
            when 120 =>  yo <= xi_121;
            when 121 =>  yo <= xi_122;
            when 122 =>  yo <= xi_123;
            when 123 =>  yo <= xi_124;
            when 124 =>  yo <= xi_125;
            when 125 =>  yo <= xi_126;
            when 126 =>  yo <= xi_127;
            when 127 =>  yo <= xi_128;
			when others =>  yo <= (others => '0');
		end case;
	end process;
end rtl;