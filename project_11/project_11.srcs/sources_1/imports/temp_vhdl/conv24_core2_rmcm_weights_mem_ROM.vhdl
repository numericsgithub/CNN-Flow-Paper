library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use ieee.numeric_std.all;

LIBRARY work;
USE work.ALL;
USE work.Components.ALL;

entity conv24_core2_rmcm_weightsconstant_memoryROM is
    generic
    (
        XI_WIDTH        	          : natural := 8;
        ARRAY_SIZE                    : natural := 256;
        WORDS_PER_ADDR                : natural := 9
    );
    Port (
        clk        : in std_logic;
        data_index : in unsigned(bits(ARRAY_SIZE-1)-1 downto 0);
        dout       : out std_logic_vector((XI_WIDTH * WORDS_PER_ADDR-1) downto 0)
    );
end conv24_core2_rmcm_weightsconstant_memoryROM;

architecture Behavioral of conv24_core2_rmcm_weightsconstant_memoryROM is
    type ROM_TYPE is array(0 to ARRAY_SIZE-1) of std_logic_vector((XI_WIDTH * WORDS_PER_ADDR)-1 downto 0);

    -- Function to concatenate signed integer values into a single std_logic_vector
    function w(w0, w1, w2, w3, w4, w5, w6, w7, w8: integer) return std_logic_vector is
    begin
        return std_logic_vector(to_signed(w0, XI_WIDTH)) & std_logic_vector(to_signed(w1, XI_WIDTH)) & std_logic_vector(to_signed(w2, XI_WIDTH)) & std_logic_vector(to_signed(w3, XI_WIDTH)) & std_logic_vector(to_signed(w4, XI_WIDTH)) & std_logic_vector(to_signed(w5, XI_WIDTH)) & std_logic_vector(to_signed(w6, XI_WIDTH)) & std_logic_vector(to_signed(w7, XI_WIDTH)) & std_logic_vector(to_signed(w8, XI_WIDTH));
    end function;

	constant data_ROM : ROM_TYPE := (
    
	    0 => w(31,37,20,39,47,25,20,28,10),
	    1 => w(23,31,13,35,42,26,25,33,20),
	    2 => w(50,55,27,1,-1,-11,-39,-44,-24),
	    3 => w(26,31,16,31,32,20,16,18,13),
	    4 => w(-77,-79,-43,-63,-83,-33,-35,-42,-11),
	    5 => w(-19,-20,-13,-24,-27,-19,-17,-19,-10),
	    6 => w(34,45,25,52,56,37,37,44,26),
	    7 => w(65,77,28,16,20,16,-21,-34,-18),
	    8 => w(-27,-26,-16,-26,-27,-23,-18,-20,-11),
	    9 => w(-47,-42,-27,-44,-40,-26,-33,-37,-13),
	    10 => w(-19,-22,-14,-25,-30,-17,-18,-22,-11),
	    11 => w(33,39,19,33,38,23,15,15,9),
	    12 => w(22,24,20,-4,-5,-7,-59,-44,-29),
	    13 => w(-17,-23,-12,-23,-26,-15,-16,-19,-11),
	    14 => w(33,41,21,43,55,31,24,33,12),
	    15 => w(27,28,15,29,36,24,35,36,21),
	    16 => w(-20,-23,-13,-22,-27,-15,-12,-16,-7),
	    17 => w(-15,-17,-8,-19,-24,-12,-15,-18,-10),
	    18 => w(-20,-23,-10,-21,-25,-14,-13,-12,-6),
	    19 => w(56,73,36,81,98,59,59,71,33),
	    20 => w(29,36,20,40,51,27,21,29,9),
	    21 => w(-21,-24,-14,-25,-31,-15,-14,-19,-6),
	    22 => w(-46,-34,-34,-40,-34,-32,-33,-32,-23),
	    23 => w(46,57,30,-24,-27,-21,-53,-54,-32),
	    24 => w(-17,-21,-11,-17,-19,-12,-8,-12,-3),
	    25 => w(40,53,28,51,64,42,33,42,20),
	    26 => w(43,50,31,59,72,38,31,43,16),
	    27 => w(41,49,24,53,63,34,30,39,17),
	    28 => w(-22,-25,-14,-29,-33,-20,-18,-24,-10),
	    29 => w(60,75,32,50,60,23,18,13,15),
	    30 => w(-11,-12,-5,12,10,8,41,46,27),
	    31 => w(55,53,41,59,64,38,35,39,23),
	    32 => w(46,59,33,60,77,39,34,43,19),
	    33 => w(-75,-64,-61,83,88,44,-65,36,-70),
	    34 => w(-49,-46,-34,-46,-20,-39,-36,-43,-21),
	    35 => w(37,45,26,43,54,29,24,32,9),
	    36 => w(41,52,26,49,65,33,27,35,13),
	    37 => w(31,40,21,39,51,28,23,30,13),
	    38 => w(34,47,23,45,56,32,26,37,19),
	    39 => w(34,42,22,43,54,33,29,36,16),
	    40 => w(45,57,28,52,70,32,22,30,10),
	    41 => w(-20,-19,-13,-18,-19,-12,-14,-16,-7),
	    42 => w(-30,-27,-17,-28,-26,-23,-26,-26,-12),
	    43 => w(44,50,30,27,33,18,13,20,6),
	    44 => w(37,47,25,49,59,35,29,38,16),
	    45 => w(-21,-23,-11,-20,-24,-13,-13,-15,-7),
	    46 => w(-19,-21,-11,-17,-17,-12,-9,-10,-3),
	    47 => w(-22,-24,-14,-29,-35,-22,-24,-30,-16),
	    48 => w(37,45,24,46,59,33,25,34,15),
	    49 => w(37,47,19,48,61,32,28,36,17),
	    50 => w(43,51,22,39,45,27,22,20,15),
	    51 => w(-15,-19,-10,-21,-22,-12,-13,-13,-7),
	    52 => w(46,54,26,55,70,41,31,42,20),
	    53 => w(-40,-44,-25,0,-5,7,48,45,32),
	    54 => w(43,54,25,50,64,31,25,31,14),
	    55 => w(38,40,22,40,42,28,25,29,17),
	    56 => w(38,47,22,48,58,31,28,35,15),
	    57 => w(-18,-22,-11,-21,-26,-15,-16,-18,-7),
	    58 => w(-22,-23,-14,-21,-22,-14,-12,-15,-5),
	    59 => w(38,50,26,50,63,36,29,39,18),
	    60 => w(39,45,24,47,57,38,28,35,18),
	    61 => w(-48,-54,-30,0,0,7,49,49,30),
	    62 => w(35,45,21,40,52,29,22,27,12),
	    63 => w(67,67,43,70,82,32,31,44,31),
	    64 => w(31,39,24,49,65,37,39,47,23),
	    65 => w(34,41,20,41,50,29,24,32,13),
	    66 => w(36,37,22,36,32,28,29,33,18),
	    67 => w(39,42,24,5,9,1,-48,-50,-32),
	    68 => w(39,50,28,51,64,34,30,41,14),
	    69 => w(-22,-26,-16,-26,-33,-18,-17,-21,-10),
	    70 => w(34,44,22,40,52,30,25,29,12),
	    71 => w(-23,-28,-15,-31,-38,-20,-21,-28,-14),
	    72 => w(18,27,8,-8,-5,-7,-44,-45,-27),
	    73 => w(40,53,29,51,65,41,35,45,22),
	    74 => w(41,50,25,42,50,24,20,28,14),
	    75 => w(61,20,-11,46,14,-14,31,4,-6),
	    76 => w(36,40,23,46,57,33,28,34,14),
	    77 => w(38,41,27,45,52,31,30,35,18),
	    78 => w(42,54,27,47,60,33,23,30,11),
	    79 => w(37,46,25,46,60,34,26,38,17),
	    80 => w(-75,-84,-33,-69,-82,-33,-21,-33,8),
	    81 => w(-20,-25,-12,-22,-28,-15,-11,-15,-5),
	    82 => w(25,-5,-50,22,-9,-42,12,-7,-29),
	    83 => w(-48,-63,-33,-44,-46,-28,-29,-40,-9),
	    84 => w(-34,-32,-26,-18,-13,-11,2,2,2),
	    85 => w(45,46,27,39,43,25,34,39,25),
	    86 => w(-52,-41,-30,-40,-22,-26,-28,-30,-12),
	    87 => w(-20,-24,-11,-24,-28,-19,-19,-20,-13),
	    88 => w(40,40,25,-9,-11,-8,-49,-47,-30),
	    89 => w(50,57,36,56,61,39,32,38,17),
	    90 => w(-26,-24,-18,-22,-22,-15,-21,-27,-12),
	    91 => w(46,51,33,56,60,49,37,44,20),
	    92 => w(-30,-27,-20,-31,-34,-26,-25,-29,-12),
	    93 => w(33,40,21,40,48,30,23,30,13),
	    94 => w(-18,-21,-11,-21,-24,-14,-14,-18,-8),
	    95 => w(-94,-95,-55,8,10,-2,83,92,52),
	    96 => w(-46,-44,-24,-41,-39,-26,-35,-35,-16),
	    97 => w(35,40,27,59,69,41,48,53,31),
	    98 => w(42,53,27,54,69,41,34,47,24),
	    99 => w(42,59,27,55,71,42,37,44,24),
	    100 => w(46,49,33,56,62,38,31,42,10),
	    101 => w(30,38,23,35,45,26,19,25,10),
	    102 => w(-32,-30,-21,-29,-18,-25,-20,-25,-12),
	    103 => w(36,45,21,42,53,28,26,32,14),
	    104 => w(-21,-24,-13,-22,-26,-15,-11,-14,-6),
	    105 => w(-38,-35,-30,-39,-14,-35,-35,-38,-29),
	    106 => w(45,57,26,53,66,36,26,30,18),
	    107 => w(37,45,26,48,62,33,31,39,14),
	    108 => w(39,55,26,63,75,43,47,52,32),
	    109 => w(37,45,23,49,62,34,29,40,21),
	    110 => w(-28,-33,-19,-32,-38,-23,-20,-25,-11),
	    111 => w(30,49,8,54,61,22,11,30,-4),
	    112 => w(35,46,28,46,58,36,34,44,21),
	    113 => w(-16,-20,-10,-18,-22,-13,-12,-15,-7),
	    114 => w(48,56,19,39,54,29,31,29,26),
	    115 => w(42,55,28,53,66,39,29,39,14),
	    116 => w(-22,-23,-17,-22,-20,-19,-17,-20,-10),
	    117 => w(-25,-24,-18,-27,-24,-22,-18,-23,-9),
	    118 => w(-28,-36,-21,-34,-43,-26,-23,-30,-16),
	    119 => w(39,49,29,52,68,37,30,47,26),
	    120 => w(-22,-26,-13,-23,-24,-14,-12,-14,-9),
	    121 => w(6,13,22,11,14,20,9,16,25),
	    122 => w(25,24,14,36,39,25,52,58,32),
	    123 => w(-18,-19,-10,-20,-19,-15,-12,-16,-10),
	    124 => w(44,55,25,48,64,34,21,29,13),
	    125 => w(-47,-54,-32,-19,-18,-11,10,12,6),
	    126 => w(-24,-30,-16,-30,-38,-24,-20,-25,-12),
	    127 => w(-27,-30,-20,-31,-33,-25,-20,-25,-13),
	    128 => w(33,42,24,40,48,29,23,31,12),
	    129 => w(36,45,26,46,54,33,29,37,16),
	    130 => w(-22,-21,-12,-19,-24,-15,-18,-21,-10),
	    131 => w(-20,-19,-15,-21,-16,-18,-19,-21,-11),
	    132 => w(-18,-18,-11,-16,-15,-12,-12,-13,-7),
	    133 => w(29,37,18,37,48,24,20,25,11),
	    134 => w(44,52,23,0,4,-2,-35,-39,-25),
	    135 => w(49,67,30,70,91,46,46,61,32),
	    136 => w(40,51,30,50,62,34,26,37,18),
	    137 => w(-23,-27,-17,-24,-31,-17,-12,-16,-4),
	    138 => w(-21,-19,-11,-23,-26,-16,-26,-26,-15),
	    139 => w(56,60,36,2,3,3,-46,-58,-31),
	    140 => w(-20,-25,-15,-28,-34,-21,-21,-25,-14),
	    141 => w(32,43,22,43,54,29,24,31,16),
	    142 => w(-38,-36,-19,-43,-34,-28,-23,-31,-5),
	    143 => w(-47,-49,-20,-37,-47,-18,-11,-19,3),
	    144 => w(39,52,25,60,78,41,41,55,24),
	    145 => w(38,48,23,43,56,28,18,24,9),
	    146 => w(35,44,23,43,52,27,21,30,14),
	    147 => w(-21,-25,-13,-25,-28,-20,-18,-22,-12),
	    148 => w(-39,-44,-19,-37,-36,-26,-21,-24,-6),
	    149 => w(-20,-26,-16,-28,-33,-21,-20,-25,-12),
	    150 => w(34,41,24,45,55,30,26,34,15),
	    151 => w(-19,-22,-12,-21,-26,-14,-12,-15,-7),
	    152 => w(34,44,21,46,58,32,28,38,17),
	    153 => w(-16,-20,-11,-22,-24,-15,-14,-16,-8),
	    154 => w(46,52,34,51,54,36,34,36,25),
	    155 => w(-30,-28,-20,-25,-17,-22,-23,-24,-13),
	    156 => w(34,32,22,34,39,24,30,35,22),
	    157 => w(24,33,15,-19,-21,-14,-57,-61,-39),
	    158 => w(21,25,23,41,41,30,41,47,22),
	    159 => w(-17,-21,-11,-22,-31,-16,-16,-21,-10),
	    160 => w(36,20,-62,35,25,-56,34,16,-46),
	    161 => w(-64,-71,-19,-52,-72,-33,-26,-31,-1),
	    162 => w(51,65,38,63,78,46,35,45,17),
	    163 => w(47,46,38,80,60,26,5,24,-4),
	    164 => w(74,85,4,-31,-43,-8,86,80,52),
	    165 => w(35,42,25,46,52,31,28,35,19),
	    166 => w(35,42,20,41,54,24,25,29,12),
	    167 => w(59,68,48,51,77,31,39,36,35),
	    168 => w(49,61,28,51,64,35,30,38,19),
	    169 => w(-21,-24,-12,-19,-22,-14,-11,-12,-6),
	    170 => w(37,46,24,51,63,35,28,35,15),
	    171 => w(-22,-27,-15,-28,-34,-21,-17,-22,-11),
	    172 => w(33,39,22,41,49,30,25,33,15),
	    173 => w(29,36,19,37,44,24,20,26,11),
	    174 => w(-19,-21,-14,-21,-27,-14,-13,-17,-7),
	    175 => w(-40,-51,-17,-54,-61,-29,-24,-32,-6),
	    176 => w(39,48,25,47,62,29,23,31,14),
	    177 => w(49,58,36,57,67,37,27,37,9),
	    178 => w(-33,95,-34,-33,78,-26,-8,39,7),
	    179 => w(-60,-65,-31,-56,-50,-29,-32,-32,-12),
	    180 => w(63,72,45,72,102,59,49,67,28),
	    181 => w(-37,-35,-22,-44,-49,-27,-31,-40,-14),
	    182 => w(-26,-30,-16,-31,-33,-27,-23,-29,-16),
	    183 => w(35,43,22,39,51,29,21,26,13),
	    184 => w(-34,-40,-17,-37,-45,-19,-20,-23,-9),
	    185 => w(-38,-46,-13,-40,-43,-25,-25,-32,-10),
	    186 => w(58,78,8,44,73,8,-6,4,-15),
	    187 => w(35,38,28,35,35,27,23,26,14),
	    188 => w(-29,-30,-13,-27,-32,-17,-17,-23,-7),
	    189 => w(30,35,29,34,47,27,30,36,28),
	    190 => w(-17,-20,-12,-21,-22,-15,-14,-19,-7),
	    191 => w(43,52,25,52,68,31,29,32,9),
	    192 => w(34,41,24,42,52,34,25,34,17),
	    193 => w(38,47,20,42,51,29,31,36,21),
	    194 => w(-22,-11,-23,55,58,37,-45,-42,-37),
	    195 => w(36,41,22,40,50,30,23,28,10),
	    196 => w(-19,-19,-12,-20,-19,-15,-16,-17,-6),
	    197 => w(42,50,25,51,60,33,27,34,13),
	    198 => w(41,49,28,52,61,39,35,44,20),
	    199 => w(-17,-21,-10,-20,-23,-14,-12,-15,-6),
	    200 => w(-35,-31,-21,-34,-32,-23,-25,-28,-12),
	    201 => w(44,54,31,55,72,43,34,47,20),
	    202 => w(34,35,20,34,38,21,23,30,12),
	    203 => w(-15,-19,-9,-20,-24,-13,-14,-17,-9),
	    204 => w(-21,-19,-14,-23,-23,-15,-15,-18,-10),
	    205 => w(41,53,27,54,66,39,33,43,20),
	    206 => w(33,39,21,38,50,24,22,28,14),
	    207 => w(53,57,23,47,57,35,25,24,22),
	    208 => w(-66,-65,-39,1,-4,3,67,65,46),
	    209 => w(30,35,21,40,47,28,22,32,13),
	    210 => w(40,52,24,46,58,30,23,32,15),
	    211 => w(-17,-20,-11,-19,-25,-15,-16,-19,-8),
	    212 => w(-54,-56,-34,-3,6,2,32,33,10),
	    213 => w(-39,-35,-27,-45,-25,-32,-38,-40,-23),
	    214 => w(-45,-43,-30,-47,-44,-37,-36,-43,-22),
	    215 => w(-20,-24,-14,-22,-27,-16,-15,-19,-8),
	    216 => w(-19,-20,-11,-20,-21,-15,-15,-16,-8),
	    217 => w(-22,-20,-16,-17,-15,-14,-22,-19,-13),
	    218 => w(34,44,22,46,56,34,26,37,16),
	    219 => w(32,41,20,43,55,24,22,27,16),
	    220 => w(44,53,28,47,53,29,26,31,15),
	    221 => w(-18,-23,-11,-23,-25,-16,-15,-15,-9),
	    222 => w(29,34,19,32,41,24,19,26,11),
	    223 => w(-30,-32,-16,-31,-27,-23,-26,-28,-16),
	    224 => w(-25,-29,-14,-27,-29,-17,-15,-19,-5),
	    225 => w(61,67,35,59,70,31,37,38,22),
	    226 => w(38,45,25,44,56,33,27,33,16),
	    227 => w(41,47,24,54,68,36,35,43,19),
	    228 => w(40,49,22,46,60,32,28,34,15),
	    229 => w(32,43,22,43,56,32,24,34,15),
	    230 => w(35,44,21,45,56,32,26,35,14),
	    231 => w(31,39,20,39,50,27,23,32,14),
	    232 => w(-16,-17,-10,-20,-24,-14,-15,-18,-11),
	    233 => w(-29,-35,-17,-38,-43,-21,-22,-28,-12),
	    234 => w(31,40,20,37,46,27,23,31,13),
	    235 => w(37,42,18,34,44,20,15,25,7),
	    236 => w(50,64,31,67,83,47,43,54,32),
	    237 => w(32,39,24,38,45,28,27,32,19),
	    238 => w(35,46,23,45,58,31,26,33,14),
	    239 => w(43,53,29,53,67,40,29,41,18),
	    240 => w(-57,-60,-33,-9,-12,-5,25,28,22),
	    241 => w(44,56,29,58,73,39,32,42,17),
	    242 => w(36,45,28,61,73,48,54,60,33),
	    243 => w(-49,-44,-26,-49,-45,-37,-34,-44,-17),
	    244 => w(43,54,25,47,58,30,24,31,13),
	    245 => w(-31,-31,-18,-28,-23,-17,-18,-27,-9),
	    246 => w(-19,-22,-12,-21,-26,-14,-12,-17,-6),
	    247 => w(36,46,22,44,57,28,24,31,14),
	    248 => w(-42,-39,-28,-38,-28,-26,-29,-31,-18),
	    249 => w(59,63,40,72,85,57,42,61,27),
	    250 => w(41,50,26,46,59,33,25,34,11),
	    251 => w(-20,-24,-13,-22,-29,-17,-17,-20,-10),
	    252 => w(-18,-20,-12,-20,-20,-14,-15,-15,-10),
	    253 => w(-19,-22,-12,-19,-17,-14,-11,-15,-5),
	    254 => w(-23,-26,-17,-28,-31,-23,-20,-26,-12),
	    255 => w(37,44,23,45,53,31,25,32,12)
        );
    attribute ram_style : string;
        attribute ram_style of data_ROM : constant is "block";
begin

Read_rom_process: process(clk)
    begin
        if rising_edge(clk) then
            dout <= data_ROM(to_integer(data_index));
        end if;
    end process;


end Behavioral;