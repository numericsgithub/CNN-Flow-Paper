library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use ieee.numeric_std.all;

LIBRARY work;
USE work.ALL;
USE work.Components.ALL;

entity conv24_core1_rmcm_weightsconstant_memoryROM is
    generic
    (
        XI_WIDTH        	          : natural := 8;
        ARRAY_SIZE                    : natural := 256;
        WORDS_PER_ADDR                : natural := 9
    );
    Port (
        clk        : in std_logic;
        data_index : in unsigned(bits(ARRAY_SIZE-1)-1 downto 0);
        dout       : out std_logic_vector((XI_WIDTH * WORDS_PER_ADDR-1) downto 0)
    );
end conv24_core1_rmcm_weightsconstant_memoryROM;

architecture Behavioral of conv24_core1_rmcm_weightsconstant_memoryROM is
    type ROM_TYPE is array(0 to ARRAY_SIZE-1) of std_logic_vector((XI_WIDTH * WORDS_PER_ADDR)-1 downto 0);

    -- Function to concatenate signed integer values into a single std_logic_vector
    function w(w0, w1, w2, w3, w4, w5, w6, w7, w8: integer) return std_logic_vector is
    begin
        return std_logic_vector(to_signed(w0, XI_WIDTH)) & std_logic_vector(to_signed(w1, XI_WIDTH)) & std_logic_vector(to_signed(w2, XI_WIDTH)) & std_logic_vector(to_signed(w3, XI_WIDTH)) & std_logic_vector(to_signed(w4, XI_WIDTH)) & std_logic_vector(to_signed(w5, XI_WIDTH)) & std_logic_vector(to_signed(w6, XI_WIDTH)) & std_logic_vector(to_signed(w7, XI_WIDTH)) & std_logic_vector(to_signed(w8, XI_WIDTH));
    end function;

	constant data_ROM : ROM_TYPE := (
    
	    0 => w(-23,-25,-16,-23,-28,-20,-16,-19,-7),
	    1 => w(59,79,21,7,16,-10,-72,-75,-56),
	    2 => w(39,48,23,46,61,34,26,35,13),
	    3 => w(39,52,26,50,66,34,26,35,15),
	    4 => w(46,57,28,44,57,28,12,21,4),
	    5 => w(-26,-28,-16,-21,-20,-17,-20,-16,-10),
	    6 => w(45,54,26,55,69,35,29,41,16),
	    7 => w(-20,-23,-12,-23,-29,-18,-16,-19,-11),
	    8 => w(43,55,29,53,68,37,27,41,15),
	    9 => w(-14,-13,-9,-17,-17,-11,-11,-14,-6),
	    10 => w(44,57,29,54,66,35,27,42,14),
	    11 => w(-66,-75,-31,-69,-81,-32,-26,-43,2),
	    12 => w(47,60,27,55,74,33,25,34,13),
	    13 => w(39,49,28,49,63,37,27,38,16),
	    14 => w(-16,-19,-11,-19,-21,-13,-12,-16,-6),
	    15 => w(-55,-65,-28,-53,-62,-26,-23,-32,-2),
	    16 => w(-37,-45,-18,-36,-45,-21,-15,-20,-5),
	    17 => w(39,45,25,53,59,38,36,43,26),
	    18 => w(-32,-28,-23,-30,-21,-26,-21,-24,-13),
	    19 => w(38,54,26,56,75,38,33,44,19),
	    20 => w(51,64,36,69,86,48,44,57,22),
	    21 => w(50,60,38,63,74,44,31,45,18),
	    22 => w(-23,-26,-16,-25,-27,-16,-15,-19,-8),
	    23 => w(-33,-33,-24,8,7,10,52,54,32),
	    24 => w(-16,-22,-11,-18,-22,-13,-10,-12,-7),
	    25 => w(58,79,36,78,103,52,45,57,23),
	    26 => w(-53,-62,-32,3,4,4,32,32,18),
	    27 => w(39,48,26,50,61,32,28,39,18),
	    28 => w(-62,-63,-25,-53,-53,-32,-30,-43,-7),
	    29 => w(-32,-29,-19,-31,-23,-24,-37,-32,-23),
	    30 => w(36,39,24,39,45,29,21,25,19),
	    31 => w(37,46,20,46,59,29,24,33,14),
	    32 => w(-29,-28,-21,-26,-18,-21,-20,-25,-11),
	    33 => w(35,46,24,48,57,30,29,32,18),
	    34 => w(39,49,22,49,66,33,30,39,16),
	    35 => w(-49,-1,20,-39,-4,12,-30,-2,8),
	    36 => w(30,38,21,37,44,31,24,31,15),
	    37 => w(33,42,19,42,52,29,23,29,13),
	    38 => w(80,98,48,95,110,77,49,67,28),
	    39 => w(-54,-57,-34,-15,-20,-15,16,9,18),
	    40 => w(-13,-17,-7,-18,-21,-13,-13,-15,-9),
	    41 => w(-26,-29,-13,-23,-32,-14,-11,-14,-2),
	    42 => w(60,72,28,73,75,49,54,48,49),
	    43 => w(-29,-26,-19,-27,-14,-23,-24,-21,-16),
	    44 => w(40,49,22,50,64,32,27,34,16),
	    45 => w(-51,-57,-21,-58,-76,-33,-22,-39,-4),
	    46 => w(-24,-29,-17,-25,-29,-19,-13,-15,-7),
	    47 => w(-27,-29,-17,-26,-26,-15,-18,-16,-7),
	    48 => w(44,46,33,50,54,40,37,52,13),
	    49 => w(50,65,32,64,78,43,37,50,22),
	    50 => w(36,41,18,32,38,22,21,24,9),
	    51 => w(-64,-60,-24,-61,-85,-32,-31,-30,-7),
	    52 => w(-24,-25,-16,-28,-30,-20,-20,-26,-13),
	    53 => w(-18,-22,-11,-23,-29,-17,-16,-19,-10),
	    54 => w(44,52,25,44,57,33,23,33,15),
	    55 => w(34,43,21,44,56,31,25,33,14),
	    56 => w(35,49,22,49,63,35,41,46,29),
	    57 => w(-23,-23,-17,-27,-19,-21,-24,-26,-15),
	    58 => w(-23,-26,-14,-25,-30,-16,-13,-17,-8),
	    59 => w(44,55,30,53,67,35,27,37,17),
	    60 => w(-25,-26,-15,-26,-28,-15,-15,-19,-8),
	    61 => w(-26,-29,-19,-23,-25,-14,-7,-12,-5),
	    62 => w(37,46,27,50,63,36,29,37,16),
	    63 => w(-22,-28,-13,-27,-34,-18,-18,-21,-11),
	    64 => w(-9,-10,-3,17,22,9,40,46,25),
	    65 => w(34,37,23,41,47,27,23,29,14),
	    66 => w(35,46,23,42,53,27,20,27,13),
	    67 => w(-65,-76,-45,13,11,9,59,59,42),
	    68 => w(-19,-22,-12,-18,-21,-11,-7,-6,-4),
	    69 => w(102,-9,-92,117,-3,-46,34,-31,-52),
	    70 => w(-17,-23,-10,-24,-31,-14,-18,-21,-10),
	    71 => w(-22,-24,-16,-23,-24,-17,-16,-18,-10),
	    72 => w(-21,-26,-14,-26,-31,-18,-18,-20,-9),
	    73 => w(-16,-18,-11,-17,-21,-13,-11,-13,-5),
	    74 => w(-19,-24,-11,-22,-29,-14,-13,-17,-9),
	    75 => w(41,55,28,51,65,35,29,35,16),
	    76 => w(41,54,24,55,69,34,31,38,16),
	    77 => w(-18,-23,-11,-24,-29,-17,-15,-19,-11),
	    78 => w(42,51,26,54,66,40,34,45,21),
	    79 => w(48,58,26,54,66,33,26,33,14),
	    80 => w(-20,-24,-14,-23,-23,-16,-18,-20,-10),
	    81 => w(43,57,25,52,70,36,27,37,16),
	    82 => w(-28,-31,-14,-28,-28,-22,-19,-22,-9),
	    83 => w(40,44,16,-1,9,1,-41,-40,-30),
	    84 => w(-19,-22,-11,-23,-27,-16,-12,-16,-7),
	    85 => w(56,72,32,51,57,32,24,25,17),
	    86 => w(33,37,21,39,47,26,25,30,18),
	    87 => w(45,14,-20,30,6,-27,41,18,-16),
	    88 => w(52,67,37,65,82,44,37,48,17),
	    89 => w(-17,-20,-10,-19,-23,-12,-11,-14,-5),
	    90 => w(-50,-60,-21,-48,-65,-22,-22,-30,-4),
	    91 => w(-16,-19,-11,-21,-24,-13,-12,-16,-6),
	    92 => w(45,54,26,51,63,37,37,42,23),
	    93 => w(37,46,24,44,52,31,28,34,17),
	    94 => w(-52,-36,-36,-31,4,-28,-40,-23,-26),
	    95 => w(-24,-27,-18,-29,-33,-23,-20,-24,-14),
	    96 => w(36,41,27,41,50,29,27,33,12),
	    97 => w(40,48,24,48,59,33,27,35,16),
	    98 => w(58,73,37,72,88,46,37,47,20),
	    99 => w(-19,-21,-11,-19,-23,-14,-11,-12,-6),
	    100 => w(-24,-27,-16,-27,-33,-19,-17,-23,-9),
	    101 => w(26,37,15,37,44,27,26,28,18),
	    102 => w(41,51,25,53,68,37,32,41,18),
	    103 => w(-22,-23,-13,-19,-22,-13,-15,-16,-8),
	    104 => w(-20,-25,-11,-27,-33,-19,-19,-24,-12),
	    105 => w(43,52,29,52,66,35,24,32,10),
	    106 => w(-15,-19,-9,-19,-24,-12,-13,-14,-7),
	    107 => w(-20,-22,-13,-23,-22,-19,-17,-20,-10),
	    108 => w(-26,-28,-18,-29,-31,-20,-20,-25,-11),
	    109 => w(-25,-28,-15,-28,-32,-20,-16,-21,-8),
	    110 => w(-19,-19,-11,-20,-21,-17,-17,-21,-10),
	    111 => w(48,60,31,56,73,37,27,34,12),
	    112 => w(46,55,30,56,70,40,35,44,21),
	    113 => w(34,43,21,42,51,27,23,31,9),
	    114 => w(-21,-27,-12,-25,-28,-17,-15,-18,-9),
	    115 => w(-27,-21,-17,-22,-19,-20,-20,-23,-11),
	    116 => w(46,61,28,51,58,33,25,28,18),
	    117 => w(-21,-22,-14,-27,-26,-16,-22,-25,-9),
	    118 => w(-35,71,-29,-13,52,-24,-31,33,-26),
	    119 => w(38,49,25,48,62,35,26,34,11),
	    120 => w(-23,-25,-17,-26,-31,-17,-14,-20,-7),
	    121 => w(32,35,20,36,39,22,26,33,19),
	    122 => w(-23,-24,-15,-20,-19,-16,-17,-19,-8),
	    123 => w(-22,-26,-13,-26,-32,-19,-18,-22,-8),
	    124 => w(44,51,31,55,69,41,30,45,15),
	    125 => w(33,42,22,39,49,26,22,27,11),
	    126 => w(31,41,18,39,48,27,24,29,16),
	    127 => w(-34,-9,-28,5,38,-5,-34,-7,-24),
	    128 => w(-30,-32,-19,-26,-27,-20,-21,-20,-13),
	    129 => w(-19,-21,-11,-21,-23,-16,-13,-16,-9),
	    130 => w(29,33,18,34,42,23,20,25,12),
	    131 => w(30,39,19,37,47,26,21,25,12),
	    132 => w(-22,-26,-14,-26,-32,-19,-16,-21,-10),
	    133 => w(37,48,25,47,54,31,28,33,18),
	    134 => w(36,47,20,38,50,23,17,22,9),
	    135 => w(-40,-35,-23,-36,-25,-26,-28,-31,-13),
	    136 => w(-62,-66,-40,9,9,10,59,58,39),
	    137 => w(58,71,36,76,99,54,44,59,23),
	    138 => w(32,39,20,38,48,25,23,29,9),
	    139 => w(-15,-20,-9,-18,-22,-12,-14,-16,-8),
	    140 => w(46,51,34,47,54,30,24,33,10),
	    141 => w(36,49,24,45,57,31,25,31,12),
	    142 => w(-74,-88,-29,-72,-90,-32,-26,-33,-2),
	    143 => w(58,59,12,11,5,-22,-35,-69,-37),
	    144 => w(-44,-50,-30,-52,-51,-43,-39,-47,-25),
	    145 => w(-36,-43,-23,7,3,10,43,44,25),
	    146 => w(-82,-91,-35,-70,-93,-29,-20,-47,-3),
	    147 => w(-24,-28,-17,-32,-32,-26,-22,-27,-14),
	    148 => w(37,44,29,51,59,35,28,39,12),
	    149 => w(-34,-28,-24,-29,-23,-19,-26,-28,-15),
	    150 => w(-17,-19,-11,-21,-21,-14,-15,-16,-9),
	    151 => w(34,42,20,41,49,27,22,31,13),
	    152 => w(-26,-25,-17,-24,-21,-17,-16,-21,-11),
	    153 => w(43,54,28,41,49,29,21,22,16),
	    154 => w(-13,-15,-9,-18,-22,-12,-14,-18,-8),
	    155 => w(31,38,22,39,51,26,21,27,13),
	    156 => w(33,43,23,38,45,28,26,29,13),
	    157 => w(-24,-30,-15,-31,-41,-18,-19,-23,-10),
	    158 => w(31,41,23,39,49,27,26,37,17),
	    159 => w(33,46,23,44,54,32,31,39,22),
	    160 => w(44,55,30,51,69,39,29,37,15),
	    161 => w(-19,-20,-11,-19,-16,-14,-15,-16,-8),
	    162 => w(-51,-55,-26,-46,-51,-28,-25,-34,-8),
	    163 => w(-19,-21,-13,-20,-22,-13,-13,-15,-9),
	    164 => w(29,38,17,45,58,33,36,45,24),
	    165 => w(-18,-19,-10,-17,-18,-12,-13,-14,-6),
	    166 => w(31,39,23,37,46,25,18,25,8),
	    167 => w(-20,-26,-13,-26,-31,-18,-16,-20,-11),
	    168 => w(39,52,30,55,64,38,37,47,24),
	    169 => w(-29,-100,-113,88,13,-42,109,55,2),
	    170 => w(102,127,64,101,126,81,54,65,30),
	    171 => w(32,42,24,44,58,30,28,35,16),
	    172 => w(65,78,46,73,70,69,48,61,26),
	    173 => w(30,40,20,43,53,28,28,32,15),
	    174 => w(47,66,30,66,86,48,45,53,28),
	    175 => w(-22,-21,-15,-21,-21,-14,-12,-14,-5),
	    176 => w(43,52,28,49,61,30,23,30,12),
	    177 => w(-66,-70,-40,-22,-28,-22,3,2,12),
	    178 => w(-19,-23,-10,-19,-23,-12,-9,-10,-5),
	    179 => w(34,39,23,40,51,26,21,29,11),
	    180 => w(17,19,11,35,41,25,41,47,26),
	    181 => w(47,52,32,51,59,38,28,37,16),
	    182 => w(34,42,23,42,52,30,27,34,15),
	    183 => w(-28,-36,-16,-31,-43,-17,-10,-15,-2),
	    184 => w(36,44,25,41,51,29,26,31,13),
	    185 => w(-67,-70,-31,-73,-81,-40,-33,-52,-10),
	    186 => w(-20,-21,-13,-24,-28,-16,-21,-23,-14),
	    187 => w(-18,-20,-10,-20,-22,-12,-14,-16,-8),
	    188 => w(42,54,28,53,67,37,33,41,20),
	    189 => w(33,41,23,41,49,33,21,29,13),
	    190 => w(31,123,-18,-30,55,-25,1,55,-22),
	    191 => w(-21,-23,-13,-26,-30,-18,-17,-22,-11),
	    192 => w(-36,-42,-21,-32,-36,-21,-20,-21,-8),
	    193 => w(46,57,24,48,56,34,33,38,20),
	    194 => w(-22,-25,-15,-27,-30,-21,-18,-23,-12),
	    195 => w(37,45,21,41,52,32,29,33,15),
	    196 => w(-25,-30,-13,-24,-32,-16,-17,-17,-7),
	    197 => w(-34,-32,-23,-35,-28,-23,-28,-31,-14),
	    198 => w(46,55,28,53,67,34,32,43,17),
	    199 => w(-22,-25,-13,-26,-34,-21,-18,-26,-9),
	    200 => w(70,85,43,68,79,41,46,53,28),
	    201 => w(-43,-35,-30,-34,-25,-30,-24,-27,-12),
	    202 => w(45,57,32,56,71,39,30,45,15),
	    203 => w(59,71,40,78,95,57,53,67,27),
	    204 => w(-14,-17,-8,-16,-21,-12,-10,-12,-2),
	    205 => w(42,51,24,48,59,34,23,36,15),
	    206 => w(-122,3,119,-81,-7,91,-93,4,65),
	    207 => w(37,45,23,41,52,32,24,30,16),
	    208 => w(30,35,19,38,49,28,24,31,12),
	    209 => w(-18,-22,-11,-25,-30,-17,-18,-21,-11),
	    210 => w(-17,-19,-9,-18,-23,-13,-11,-14,-6),
	    211 => w(40,47,26,44,57,32,26,31,15),
	    212 => w(-19,-20,-13,-20,-16,-16,-15,-20,-9),
	    213 => w(-22,-24,-12,-25,-30,-18,-17,-22,-9),
	    214 => w(-21,-25,-13,-20,-24,-13,-6,-10,-4),
	    215 => w(35,41,21,41,49,32,26,36,13),
	    216 => w(-28,-30,-19,-28,-23,-19,-21,-22,-14),
	    217 => w(33,40,24,41,51,30,23,31,11),
	    218 => w(-15,-14,-11,-17,-18,-12,-11,-16,-6),
	    219 => w(40,50,26,54,69,33,28,39,15),
	    220 => w(-18,-20,-11,-20,-24,-14,-14,-15,-8),
	    221 => w(28,39,14,45,54,31,42,49,31),
	    222 => w(35,39,25,40,45,28,22,29,12),
	    223 => w(-23,-27,-14,-30,-35,-19,-16,-23,-9),
	    224 => w(-22,-24,-16,-25,-24,-20,-16,-21,-8),
	    225 => w(36,43,19,11,13,5,-21,-21,-12),
	    226 => w(31,40,20,37,46,26,22,30,10),
	    227 => w(46,58,34,60,78,46,37,51,23),
	    228 => w(42,53,26,52,64,35,32,42,20),
	    229 => w(36,46,21,45,56,29,25,31,15),
	    230 => w(41,48,25,46,54,31,27,31,14),
	    231 => w(-24,-25,-17,-26,-24,-19,-18,-21,-10),
	    232 => w(34,42,22,41,51,27,23,30,12),
	    233 => w(51,62,26,55,70,37,29,35,16),
	    234 => w(40,48,28,50,59,34,37,46,22),
	    235 => w(40,57,25,53,68,38,33,39,22),
	    236 => w(-20,-25,-13,-27,-32,-17,-18,-24,-13),
	    237 => w(46,45,35,32,33,28,16,21,11),
	    238 => w(-20,-24,-12,-23,-27,-17,-16,-21,-9),
	    239 => w(31,40,20,42,51,26,24,31,13),
	    240 => w(33,46,23,45,58,30,26,31,16),
	    241 => w(-17,-18,-9,-20,-22,-13,-12,-14,-7),
	    242 => w(40,48,24,43,51,29,20,28,14),
	    243 => w(-33,-33,-21,-37,-33,-29,-29,-35,-17),
	    244 => w(-41,-55,-17,-51,-60,-29,-25,-34,-8),
	    245 => w(-73,-71,-42,6,9,4,79,81,49),
	    246 => w(105,93,69,113,108,76,101,116,66),
	    247 => w(39,43,28,48,61,36,33,44,16),
	    248 => w(-22,-20,-15,-22,-18,-17,-18,-16,-10),
	    249 => w(45,60,30,59,75,42,35,46,20),
	    250 => w(-23,-26,-15,-24,-27,-18,-14,-19,-8),
	    251 => w(39,49,30,52,61,40,33,43,23),
	    252 => w(35,43,25,46,57,31,24,33,17),
	    253 => w(-32,-28,-25,-28,-22,-24,-28,-24,-13),
	    254 => w(-23,-24,-15,-23,-22,-15,-13,-17,-6),
	    255 => w(41,49,21,42,52,31,27,31,18)
        );
    attribute ram_style : string;
        attribute ram_style of data_ROM : constant is "block";
begin

Read_rom_process: process(clk)
    begin
        if rising_edge(clk) then
            dout <= data_ROM(to_integer(data_index));
        end if;
    end process;


end Behavioral;