library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use ieee.numeric_std.all;

LIBRARY work;
USE work.ALL;
USE work.Components.ALL;

entity conv11_bias_add_constant_memoryROM is
    generic
    (
        XI_WIDTH        	          : natural := 8;
        ARRAY_SIZE                    : natural := 64;
        WORDS_PER_ADDR                : natural := 64
    );
    Port (
        clk        : in std_logic;
        data_index : in unsigned(bits(ARRAY_SIZE-1)-1 downto 0);
        dout       : out std_logic_vector((XI_WIDTH * WORDS_PER_ADDR-1) downto 0)
    );
end conv11_bias_add_constant_memoryROM;

architecture Behavioral of conv11_bias_add_constant_memoryROM is
    type ROM_TYPE is array(0 to ARRAY_SIZE-1) of std_logic_vector((XI_WIDTH * WORDS_PER_ADDR)-1 downto 0);

    -- Function to concatenate signed integer values into a single std_logic_vector
    function w(w0, w1, w2, w3, w4, w5, w6, w7, w8, w9, w10, w11, w12, w13, w14, w15, w16, w17, w18, w19, w20, w21, w22, w23, w24, w25, w26, w27, w28, w29, w30, w31, w32, w33, w34, w35, w36, w37, w38, w39, w40, w41, w42, w43, w44, w45, w46, w47, w48, w49, w50, w51, w52, w53, w54, w55, w56, w57, w58, w59, w60, w61, w62, w63: integer) return std_logic_vector is
    begin
        return std_logic_vector(to_signed(w0, XI_WIDTH)) & std_logic_vector(to_signed(w1, XI_WIDTH)) & std_logic_vector(to_signed(w2, XI_WIDTH)) & std_logic_vector(to_signed(w3, XI_WIDTH)) & std_logic_vector(to_signed(w4, XI_WIDTH)) & std_logic_vector(to_signed(w5, XI_WIDTH)) & std_logic_vector(to_signed(w6, XI_WIDTH)) & std_logic_vector(to_signed(w7, XI_WIDTH)) & std_logic_vector(to_signed(w8, XI_WIDTH)) & std_logic_vector(to_signed(w9, XI_WIDTH)) & std_logic_vector(to_signed(w10, XI_WIDTH)) & std_logic_vector(to_signed(w11, XI_WIDTH)) & std_logic_vector(to_signed(w12, XI_WIDTH)) & std_logic_vector(to_signed(w13, XI_WIDTH)) & std_logic_vector(to_signed(w14, XI_WIDTH)) & std_logic_vector(to_signed(w15, XI_WIDTH)) & std_logic_vector(to_signed(w16, XI_WIDTH)) & std_logic_vector(to_signed(w17, XI_WIDTH)) & std_logic_vector(to_signed(w18, XI_WIDTH)) & std_logic_vector(to_signed(w19, XI_WIDTH)) & std_logic_vector(to_signed(w20, XI_WIDTH)) & std_logic_vector(to_signed(w21, XI_WIDTH)) & std_logic_vector(to_signed(w22, XI_WIDTH)) & std_logic_vector(to_signed(w23, XI_WIDTH)) & std_logic_vector(to_signed(w24, XI_WIDTH)) & std_logic_vector(to_signed(w25, XI_WIDTH)) & std_logic_vector(to_signed(w26, XI_WIDTH)) & std_logic_vector(to_signed(w27, XI_WIDTH)) & std_logic_vector(to_signed(w28, XI_WIDTH)) & std_logic_vector(to_signed(w29, XI_WIDTH)) & std_logic_vector(to_signed(w30, XI_WIDTH)) & std_logic_vector(to_signed(w31, XI_WIDTH)) & std_logic_vector(to_signed(w32, XI_WIDTH)) & std_logic_vector(to_signed(w33, XI_WIDTH)) & std_logic_vector(to_signed(w34, XI_WIDTH)) & std_logic_vector(to_signed(w35, XI_WIDTH)) & std_logic_vector(to_signed(w36, XI_WIDTH)) & std_logic_vector(to_signed(w37, XI_WIDTH)) & std_logic_vector(to_signed(w38, XI_WIDTH)) & std_logic_vector(to_signed(w39, XI_WIDTH)) & std_logic_vector(to_signed(w40, XI_WIDTH)) & std_logic_vector(to_signed(w41, XI_WIDTH)) & std_logic_vector(to_signed(w42, XI_WIDTH)) & std_logic_vector(to_signed(w43, XI_WIDTH)) & std_logic_vector(to_signed(w44, XI_WIDTH)) & std_logic_vector(to_signed(w45, XI_WIDTH)) & std_logic_vector(to_signed(w46, XI_WIDTH)) & std_logic_vector(to_signed(w47, XI_WIDTH)) & std_logic_vector(to_signed(w48, XI_WIDTH)) & std_logic_vector(to_signed(w49, XI_WIDTH)) & std_logic_vector(to_signed(w50, XI_WIDTH)) & std_logic_vector(to_signed(w51, XI_WIDTH)) & std_logic_vector(to_signed(w52, XI_WIDTH)) & std_logic_vector(to_signed(w53, XI_WIDTH)) & std_logic_vector(to_signed(w54, XI_WIDTH)) & std_logic_vector(to_signed(w55, XI_WIDTH)) & std_logic_vector(to_signed(w56, XI_WIDTH)) & std_logic_vector(to_signed(w57, XI_WIDTH)) & std_logic_vector(to_signed(w58, XI_WIDTH)) & std_logic_vector(to_signed(w59, XI_WIDTH)) & std_logic_vector(to_signed(w60, XI_WIDTH)) & std_logic_vector(to_signed(w61, XI_WIDTH)) & std_logic_vector(to_signed(w62, XI_WIDTH)) & std_logic_vector(to_signed(w63, XI_WIDTH));
    end function;

	constant data_ROM : ROM_TYPE := (
    
	    0 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    1 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    2 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    3 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    4 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    5 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    6 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    7 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    8 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    9 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    10 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    11 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    12 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    13 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    14 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    15 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    16 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    17 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    18 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    19 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    20 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    21 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    22 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    23 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    24 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    25 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    26 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    27 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    28 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    29 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    30 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    31 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    32 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    33 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    34 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    35 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    36 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    37 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    38 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    39 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    40 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    41 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    42 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    43 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    44 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    45 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    46 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    47 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    48 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    49 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    50 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    51 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    52 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    53 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    54 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    55 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    56 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    57 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    58 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    59 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    60 => w(40,-12,-4,37,35,39,31,49,37,-15,14,-57,40,45,46,28,-40,7,34,7,66,22,-7,12,1,4,-4,24,30,7,-14,1,16,-10,24,-78,6,-27,73,-29,-32,-21,-59,-46,-13,28,24,-48,-22,14,-26,-2,14,7,-1,9,-44,8,-28,-33,37,-34,-11,-6),
	    61 => w(-18,28,-84,34,5,33,-39,-48,40,-18,-8,-45,-26,17,-1,9,-32,60,35,50,-27,48,59,-52,20,-11,-14,-4,7,-72,7,44,-8,-38,25,5,2,26,41,-11,16,-88,-38,7,27,33,-7,-41,42,-5,32,3,-51,-39,-17,6,-15,47,27,-8,0,-100,71,-62),
	    62 => w(15,51,48,-98,-17,-32,47,-32,-35,-74,-50,6,2,21,33,-9,-33,14,17,-79,-15,-13,-50,-58,31,6,-16,1,57,-110,14,63,24,-13,-49,107,-62,26,25,-31,43,-28,14,-7,-38,-104,-34,-11,-14,3,-105,29,63,13,-4,-24,-15,-75,12,7,27,-4,-25,-7),
	    63 => w(-32,-15,-62,-3,37,0,-40,40,30,30,-10,-4,65,42,-22,19,-5,73,-34,-51,0,13,-35,14,-118,28,1,-33,21,29,23,-63,-7,-30,38,-39,-18,-61,22,24,-44,30,-1,-21,32,-1,30,-42,-63,-19,-10,-31,78,57,1,50,18,54,-3,39,-48,-25,19,13)
        );
    
begin

dout <= data_ROM(to_integer(data_index));


end Behavioral;