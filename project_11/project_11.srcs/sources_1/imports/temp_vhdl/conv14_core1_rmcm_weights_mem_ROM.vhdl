library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use ieee.numeric_std.all;

LIBRARY work;
USE work.ALL;
USE work.Components.ALL;

entity conv14_core1_rmcm_weightsconstant_memoryROM is
    generic
    (
        XI_WIDTH        	          : natural := 8;
        ARRAY_SIZE                    : natural := 256;
        WORDS_PER_ADDR                : natural := 9
    );
    Port (
        clk        : in std_logic;
        data_index : in unsigned(bits(ARRAY_SIZE-1)-1 downto 0);
        dout       : out std_logic_vector((XI_WIDTH * WORDS_PER_ADDR-1) downto 0)
    );
end conv14_core1_rmcm_weightsconstant_memoryROM;

architecture Behavioral of conv14_core1_rmcm_weightsconstant_memoryROM is
    type ROM_TYPE is array(0 to ARRAY_SIZE-1) of std_logic_vector((XI_WIDTH * WORDS_PER_ADDR)-1 downto 0);

    -- Function to concatenate signed integer values into a single std_logic_vector
    function w(w0, w1, w2, w3, w4, w5, w6, w7, w8: integer) return std_logic_vector is
    begin
        return std_logic_vector(to_signed(w0, XI_WIDTH)) & std_logic_vector(to_signed(w1, XI_WIDTH)) & std_logic_vector(to_signed(w2, XI_WIDTH)) & std_logic_vector(to_signed(w3, XI_WIDTH)) & std_logic_vector(to_signed(w4, XI_WIDTH)) & std_logic_vector(to_signed(w5, XI_WIDTH)) & std_logic_vector(to_signed(w6, XI_WIDTH)) & std_logic_vector(to_signed(w7, XI_WIDTH)) & std_logic_vector(to_signed(w8, XI_WIDTH));
    end function;

	constant data_ROM : ROM_TYPE := (
    
	    0 => w(-6,-6,-3,-5,-3,-3,-5,-5,-4),
	    1 => w(1,5,0,6,11,3,0,2,0),
	    2 => w(4,-16,-5,11,-25,-18,22,19,4),
	    3 => w(1,-1,1,1,18,-1,0,1,0),
	    4 => w(0,-5,0,-6,-24,-2,0,-4,0),
	    5 => w(9,-2,-4,29,-6,-22,1,-15,2),
	    6 => w(3,-21,4,-12,-32,-13,8,53,6),
	    7 => w(-2,-14,4,9,35,3,1,-5,0),
	    8 => w(-3,0,8,-1,-24,39,-8,-11,13),
	    9 => w(3,14,24,-14,-25,11,-3,-13,0),
	    10 => w(0,0,-2,-2,-10,-9,0,-3,-4),
	    11 => w(-5,-4,-3,-4,-4,-3,-3,-3,-3),
	    12 => w(-4,-3,-2,-2,-4,-1,-4,-5,-3),
	    13 => w(6,0,-7,18,1,-14,6,0,-8),
	    14 => w(-1,1,1,-8,28,-9,1,2,-1),
	    15 => w(-8,-19,-6,0,16,-4,3,13,2),
	    16 => w(-8,-5,-9,-4,0,-5,-7,-6,-3),
	    17 => w(-3,-9,-2,-2,40,-5,-2,-9,-1),
	    18 => w(4,-11,5,-13,-50,0,5,5,5),
	    19 => w(0,7,2,7,35,-5,-8,-9,-3),
	    20 => w(-2,-3,-1,-2,-7,-1,-1,-2,-2),
	    21 => w(-1,-13,0,-13,-28,-6,1,-8,2),
	    22 => w(-1,-1,-2,-5,-8,-4,-5,-7,-3),
	    23 => w(3,14,0,-1,19,-7,-5,-21,-5),
	    24 => w(-4,-14,-3,-10,-17,-8,11,36,9),
	    25 => w(-2,-13,4,-16,-29,39,1,0,14),
	    26 => w(-2,-2,6,-23,-3,28,-1,-6,4),
	    27 => w(3,9,-5,10,21,-23,-4,-8,-3),
	    28 => w(-1,4,-3,7,11,3,-2,3,-3),
	    29 => w(6,19,12,-12,-12,4,-4,-14,0),
	    30 => w(-1,2,-2,6,26,0,-3,-1,-1),
	    31 => w(4,-15,-8,-1,-15,-9,5,-3,-1),
	    32 => w(-1,2,-2,2,24,-6,-1,-5,0),
	    33 => w(-4,-2,7,-21,-3,24,-2,-3,3),
	    34 => w(20,-1,0,5,-5,0,-3,-8,-4),
	    35 => w(-1,-6,-3,8,-25,-9,20,11,3),
	    36 => w(-5,-14,-2,-1,33,-7,-2,-5,-2),
	    37 => w(5,-13,-6,31,-9,-20,6,-6,-5),
	    38 => w(0,-9,1,-5,32,-8,-1,-5,0),
	    39 => w(4,-9,1,37,-21,-12,11,-9,-3),
	    40 => w(0,-1,-2,-13,-17,34,1,1,0),
	    41 => w(3,2,1,-1,28,-2,0,-2,2),
	    42 => w(-1,-7,9,-18,-16,35,2,-12,6),
	    43 => w(-3,-2,-3,-2,34,-4,-3,-2,-2),
	    44 => w(1,8,1,-12,-43,-7,9,26,5),
	    45 => w(-4,-4,-2,-3,24,-6,-4,0,-3),
	    46 => w(12,3,12,-3,-46,-5,10,-1,12),
	    47 => w(5,-3,-4,25,-4,-21,3,-2,-3),
	    48 => w(7,11,-5,8,8,-10,-4,-7,-8),
	    49 => w(-2,8,-4,2,24,-5,-7,-9,-5),
	    50 => w(0,-15,1,-12,-30,-14,12,51,6),
	    51 => w(-12,-14,3,-11,-19,10,5,19,13),
	    52 => w(17,-11,-2,45,-31,-9,10,-14,-3),
	    53 => w(-2,1,-2,0,20,-1,-3,-3,-3),
	    54 => w(1,1,-3,-14,40,-24,-3,3,-2),
	    55 => w(-7,0,0,-18,39,-13,2,-1,-4),
	    56 => w(-2,1,-2,1,22,-4,-2,-3,-1),
	    57 => w(-2,-3,-1,-2,37,-7,-2,-7,1),
	    58 => w(5,-4,-2,33,-4,-28,5,-4,-2),
	    59 => w(-2,-3,-2,-3,-3,-3,-2,-3,0),
	    60 => w(1,0,0,3,20,-4,0,-3,1),
	    61 => w(-3,-3,-4,-4,-8,-2,-3,-5,-4),
	    62 => w(-6,-7,12,-7,-28,37,-8,-1,7),
	    63 => w(1,3,0,3,11,1,0,1,1),
	    64 => w(5,11,-1,7,9,-8,-4,-11,-11),
	    65 => w(11,-14,-4,25,-27,-11,14,5,0),
	    66 => w(1,-8,0,-9,-34,-10,-1,-5,0),
	    67 => w(-8,-5,-1,5,35,-2,-4,-6,-1),
	    68 => w(-2,-2,-1,0,20,-2,-2,-1,-1),
	    69 => w(-2,0,-2,-1,31,-5,-3,-6,-2),
	    70 => w(-1,2,31,-10,-27,25,-8,-13,1),
	    71 => w(-10,-14,-6,-2,-6,1,8,21,5),
	    72 => w(3,9,-1,6,8,-3,-5,-9,-6),
	    73 => w(7,-11,0,38,-10,-21,7,-6,-1),
	    74 => w(-7,-11,-3,6,2,-8,7,15,-2),
	    75 => w(-2,-3,-1,-1,29,-4,-2,-3,-1),
	    76 => w(-1,7,-3,7,20,3,-1,2,-1),
	    77 => w(2,-19,2,-6,-12,-3,4,32,1),
	    78 => w(-4,-18,-2,-2,-6,-2,6,22,4),
	    79 => w(-4,-4,-2,-6,-5,-5,-1,-4,-1),
	    80 => w(-3,-4,-3,-3,43,-10,-5,-7,-2),
	    81 => w(-2,-23,1,-11,-9,-9,9,35,5),
	    82 => w(0,3,1,6,22,-14,-2,-11,-8),
	    83 => w(10,-2,-2,21,-3,-14,1,-3,-5),
	    84 => w(10,23,10,-9,-12,-1,-5,-12,-3),
	    85 => w(2,16,-1,-2,-38,3,3,18,0),
	    86 => w(3,-2,3,-3,-34,6,3,4,3),
	    87 => w(1,3,1,4,18,1,1,3,1),
	    88 => w(4,18,16,-14,-21,12,-10,-13,-1),
	    89 => w(6,16,22,-15,-20,10,-5,-17,2),
	    90 => w(-2,4,-1,2,34,-1,-2,1,-3),
	    91 => w(3,2,17,-18,-31,26,-4,-8,8),
	    92 => w(-3,-7,-3,-12,-34,-4,-3,-6,-1),
	    93 => w(10,50,11,-18,-30,-18,1,-13,1),
	    94 => w(1,3,2,3,28,-1,1,0,1),
	    95 => w(-1,1,-1,3,16,-3,-1,0,-1),
	    96 => w(-3,-7,-6,1,-8,-3,-5,-10,-2),
	    97 => w(1,-9,8,-22,-11,37,-1,-9,8),
	    98 => w(-9,0,2,1,28,6,3,7,-5),
	    99 => w(6,-5,-4,29,-6,-22,6,-2,-3),
	    100 => w(-4,-6,-4,-2,36,-6,-6,1,-5),
	    101 => w(-3,-5,-3,-2,38,-8,-4,-6,-3),
	    102 => w(-1,-4,-1,-5,-16,3,1,-1,-1),
	    103 => w(-3,-27,1,0,25,0,-2,5,-2),
	    104 => w(3,-13,2,3,38,2,-6,-26,-5),
	    105 => w(-3,6,1,5,19,2,1,3,-2),
	    106 => w(-2,0,-4,3,29,2,-8,-4,-5),
	    107 => w(-2,-6,8,-23,-12,33,0,-5,5),
	    108 => w(0,-1,0,-4,26,-2,-2,1,-2),
	    109 => w(2,8,3,7,28,-7,-7,-24,-8),
	    110 => w(-1,-23,-1,-9,-13,-7,8,41,5),
	    111 => w(9,-12,1,48,-22,-22,5,-14,2),
	    112 => w(-6,-1,-5,-4,-3,-3,-4,-3,-4),
	    113 => w(-5,-8,-3,-6,-6,-6,-5,-6,-4),
	    114 => w(0,2,-1,3,19,1,-1,0,0),
	    115 => w(-4,-2,-6,-4,44,-12,-4,-13,0),
	    116 => w(-2,-3,9,-21,25,-4,4,9,-2),
	    117 => w(-1,3,0,1,19,-2,-2,-1,-1),
	    118 => w(2,-3,3,-7,-40,-3,3,-2,3),
	    119 => w(-2,-20,2,6,25,1,-3,-8,-1),
	    120 => w(-18,-7,3,-6,58,-12,6,-12,-8),
	    121 => w(-1,-2,-1,-3,29,-4,-2,-3,-2),
	    122 => w(1,8,-1,-5,32,-3,0,1,0),
	    123 => w(-4,-19,-4,-5,-6,-3,6,29,4),
	    124 => w(-8,-9,-2,-7,-7,-3,-7,-9,0),
	    125 => w(0,-3,-2,5,19,-19,-1,-5,-1),
	    126 => w(0,2,0,0,21,-2,0,-2,0),
	    127 => w(3,9,14,-5,-34,16,1,0,0),
	    128 => w(-3,-2,-5,-4,-3,-3,-6,-4,-2),
	    129 => w(-1,-13,-6,8,13,-12,2,9,-1),
	    130 => w(9,-11,-3,28,-16,-12,9,-4,-1),
	    131 => w(8,-5,-2,30,-4,-24,4,-12,2),
	    132 => w(-5,-18,-3,-1,0,0,4,23,2),
	    133 => w(-2,-16,-3,3,41,0,-1,-3,1),
	    134 => w(-1,2,-2,-2,29,-5,0,-2,1),
	    135 => w(-10,-10,5,-11,3,15,1,4,9),
	    136 => w(-4,-5,-5,-7,-6,-6,-4,-3,-4),
	    137 => w(3,-20,4,-14,-26,-10,10,44,6),
	    138 => w(2,3,9,-18,-14,25,-12,-14,-2),
	    139 => w(-4,-7,12,-14,-14,35,-5,-11,3),
	    140 => w(1,-12,-1,-12,-22,-9,10,37,8),
	    141 => w(-2,-16,-1,-2,-4,-2,3,25,2),
	    142 => w(5,8,5,10,25,6,3,9,4),
	    143 => w(-9,-14,22,-12,-11,31,3,-7,-4),
	    144 => w(7,-13,-7,19,-24,-16,19,18,6),
	    145 => w(7,18,-5,7,-6,-7,-5,-12,-3),
	    146 => w(-2,-5,0,-2,-9,-1,-1,-1,0),
	    147 => w(-8,-7,-6,-12,-7,-13,-5,-10,-2),
	    148 => w(4,22,13,-12,-17,5,-2,-15,-1),
	    149 => w(12,-15,-5,46,-31,-16,14,-14,-2),
	    150 => w(3,-3,-1,28,-3,-20,4,-6,-2),
	    151 => w(0,-5,-7,10,22,-25,1,-6,-3),
	    152 => w(-5,2,3,-26,29,-2,-5,-1,2),
	    153 => w(-1,-2,5,-10,-4,16,-2,-1,0),
	    154 => w(-1,-4,-6,7,-5,-6,-1,-4,-5),
	    155 => w(-5,-15,-5,-8,-13,-5,4,30,-2),
	    156 => w(-5,-9,-3,-3,-9,-1,-2,-5,-2),
	    157 => w(-6,-9,-3,-9,-8,-6,-3,-6,-1),
	    158 => w(-5,-19,-2,-6,-6,-4,8,27,7),
	    159 => w(3,-6,-3,28,-5,-23,6,-2,-1),
	    160 => w(6,14,35,-13,-38,14,-6,-14,3),
	    161 => w(1,-10,-8,6,1,-6,12,6,0),
	    162 => w(-7,-21,-5,-2,1,-2,8,22,6),
	    163 => w(-3,-9,-1,-5,-20,-2,-3,-3,-3),
	    164 => w(-5,0,-6,-6,-10,-6,-7,-1,-5),
	    165 => w(-9,-24,-3,-7,36,-6,0,4,2),
	    166 => w(7,31,4,-5,-21,-5,-3,-11,-2),
	    167 => w(-6,-21,-3,-4,-7,-5,8,30,3),
	    168 => w(-2,-12,0,-3,27,-6,0,3,-1),
	    169 => w(-2,-2,3,2,14,6,2,7,-1),
	    170 => w(-4,-1,3,-6,-12,3,10,9,-2),
	    171 => w(-1,-3,-6,8,0,-12,10,4,0),
	    172 => w(-2,-2,-2,-1,23,-3,-2,-2,-1),
	    173 => w(0,0,0,1,20,-3,0,-1,0),
	    174 => w(-3,6,15,-8,-9,9,-2,-13,0),
	    175 => w(0,-5,0,-5,-26,1,-1,-1,-1),
	    176 => w(-4,-6,-5,3,30,-12,-6,-5,-4),
	    177 => w(-1,2,0,4,20,2,0,-1,0),
	    178 => w(3,18,1,-11,-29,-7,1,3,1),
	    179 => w(-4,-7,12,-8,-36,52,-3,-6,3),
	    180 => w(12,-1,-5,7,-15,-7,4,-8,-7),
	    181 => w(-1,2,-1,3,27,-4,-3,-2,-1),
	    182 => w(9,37,5,-11,-26,-6,-1,-9,-1),
	    183 => w(5,5,-1,6,21,7,-3,3,0),
	    184 => w(-11,-7,-1,2,22,2,2,-3,-4),
	    185 => w(5,-3,-2,22,-2,-21,3,-2,-1),
	    186 => w(-2,-17,-1,16,24,-4,-8,-6,7),
	    187 => w(9,-38,9,-5,-77,2,3,-17,4),
	    188 => w(-7,-9,-4,-9,-2,-7,-4,-8,-1),
	    189 => w(22,11,4,14,-17,-17,3,-15,-7),
	    190 => w(5,0,1,-34,60,-25,1,4,1),
	    191 => w(-2,-3,-2,-3,28,-5,-3,-2,-2),
	    192 => w(-3,-17,9,-15,-44,70,-2,-14,11),
	    193 => w(-4,-10,20,-11,-20,35,0,-17,8),
	    194 => w(-1,-4,5,-28,-4,33,0,-3,3),
	    195 => w(-15,-8,-12,-5,-2,-6,-15,-6,-9),
	    196 => w(-3,15,13,-4,-32,-6,8,-1,-12),
	    197 => w(-32,15,14,23,29,-12,12,-9,-1),
	    198 => w(-5,-7,-3,-8,-7,-7,-4,-7,-3),
	    199 => w(0,-14,2,-4,-15,0,2,-12,3),
	    200 => w(14,14,6,15,-36,-5,2,-9,-1),
	    201 => w(-3,3,-3,3,17,3,-2,5,-2),
	    202 => w(5,-8,-10,12,6,-6,9,-2,-3),
	    203 => w(1,1,2,2,15,0,2,2,2),
	    204 => w(-7,-6,-5,-6,-3,-7,-6,-5,-5),
	    205 => w(1,2,1,1,17,0,0,-3,1),
	    206 => w(2,-3,-1,32,-21,-1,-4,1,0),
	    207 => w(5,12,-12,11,14,-25,-12,-26,-11),
	    208 => w(-24,7,13,-3,-20,-2,29,-1,-15),
	    209 => w(-3,-3,-4,-3,14,2,-2,2,-3),
	    210 => w(-2,-5,-1,6,18,-11,-4,-2,-2),
	    211 => w(-3,-8,-4,-6,0,-6,-7,-5,-6),
	    212 => w(-2,5,-2,3,15,2,-2,3,-2),
	    213 => w(-2,-9,-1,-4,-34,1,0,53,-5),
	    214 => w(-4,3,1,-9,37,-19,4,-3,-5),
	    215 => w(-2,6,3,6,14,0,4,1,-1),
	    216 => w(0,-24,0,-5,-9,-9,7,37,4),
	    217 => w(4,1,4,3,10,2,4,-1,3),
	    218 => w(0,-14,-7,4,44,-3,-7,-11,4),
	    219 => w(-3,-3,-3,3,29,-14,-2,-4,0),
	    220 => w(-11,3,3,-2,-34,-21,4,10,5),
	    221 => w(2,10,-3,9,28,-4,-5,-6,-2),
	    222 => w(-2,24,7,-3,-6,-2,-5,-12,0),
	    223 => w(-5,-7,-4,5,11,-3,3,9,2),
	    224 => w(1,6,-3,4,23,-1,-4,-5,-4),
	    225 => w(0,-18,2,-13,-18,-1,6,32,9),
	    226 => w(-3,-13,-3,-7,-19,-7,9,33,9),
	    227 => w(0,1,0,3,13,-1,-1,-1,0),
	    228 => w(3,-12,3,-9,-42,0,3,1,0),
	    229 => w(-4,-2,-1,2,36,-2,-4,-2,-2),
	    230 => w(-1,2,-1,3,16,0,-1,0,-1),
	    231 => w(-11,-5,10,53,-28,-16,10,-13,-4),
	    232 => w(-1,2,-2,3,26,-7,-2,-6,1),
	    233 => w(2,-12,-4,22,-7,-9,9,2,-2),
	    234 => w(1,21,-1,0,6,1,-2,-25,1),
	    235 => w(9,-9,-2,26,-11,-15,7,-6,-1),
	    236 => w(-1,0,-1,1,15,-2,-1,0,-1),
	    237 => w(-4,-3,6,-20,-1,23,-4,-3,6),
	    238 => w(12,45,8,-15,-25,-11,1,-17,0),
	    239 => w(-2,-8,-3,5,-14,-17,-1,3,2),
	    240 => w(4,-4,2,37,-12,-27,6,-6,0),
	    241 => w(-3,7,-5,-10,28,-5,-5,6,-3),
	    242 => w(-6,2,-6,2,5,1,-6,0,-6),
	    243 => w(7,33,6,-8,-13,-6,0,-19,0),
	    244 => w(-1,2,-1,1,15,-1,0,0,-1),
	    245 => w(5,6,3,5,1,4,4,3,3),
	    246 => w(0,-2,1,-8,42,-9,1,2,0),
	    247 => w(-1,1,-1,2,15,1,-1,2,-1),
	    248 => w(-4,-6,-3,-5,-3,-4,-4,-4,-4),
	    249 => w(-1,-5,-1,-3,36,-6,-2,-6,-2),
	    250 => w(9,31,5,-2,-19,-2,-3,-14,-3),
	    251 => w(-2,-4,-2,-5,-10,-4,0,-2,0),
	    252 => w(13,49,4,-14,-15,-10,-1,-29,3),
	    253 => w(27,10,2,21,-28,-18,4,-16,-2),
	    254 => w(-1,-3,0,-3,-8,-1,-1,-2,-1),
	    255 => w(-1,-6,1,-8,-26,-8,0,-6,-1)
        );
    attribute ram_style : string;
        attribute ram_style of data_ROM : constant is "block";
begin

Read_rom_process: process(clk)
    begin
        if rising_edge(clk) then
            dout <= data_ROM(to_integer(data_index));
        end if;
    end process;


end Behavioral;